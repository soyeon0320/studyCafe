CREATE TABLE TB_ADMIN
(
	ADMIN_ID             VARCHAR2(20) NOT NULL ,
	ADMIN_PASS           VARCHAR2(20) NOT NULL ,
	ADMIN_NAME           VARCHAR2(12) NOT NULL ,
	ADMIN_EMAIL          VARCHAR2(30) NOT NULL ,
	ADMIN_HP             VARCHAR2(16) NOT NULL 
);



ALTER TABLE TB_ADMIN
	ADD  PRIMARY KEY (ADMIN_ID);



CREATE TABLE TB_BOARD_FREE
(
	FREE_NO              NUMBER NOT NULL ,
	FREE_TITLE           VARCHAR2(90) NOT NULL ,
	FREE_CONTENT         VARCHAR2(900) NOT NULL ,
	FREE_REG_DATE        DATE NOT NULL ,
	FREE_CNT             NUMBER NOT NULL ,
	MEM_ID               VARCHAR2(12) NOT NULL 
);



ALTER TABLE TB_BOARD_FREE
	ADD  PRIMARY KEY (FREE_NO);



CREATE TABLE TB_BOARD_INFO
(
	INFO_NO              NUMBER NOT NULL ,
	INFO_TITLE           VARCHAR2(90) NOT NULL ,
	INFO_CONTENT         VARCHAR2(900) NOT NULL ,
	INFO_REG_DATE        DATE NOT NULL ,
	INFO_CNT             NUMBER NULL ,
	MEM_ID               VARCHAR2(12) NOT NULL 
);



ALTER TABLE TB_BOARD_INFO
	ADD  PRIMARY KEY (INFO_NO);



CREATE TABLE TB_BOARD_NOTICE
(
	NOTICE_NO            NUMBER NOT NULL ,
	NOTICE_TITLE         VARCHAR2(90) NOT NULL ,
	NOTICE_CONTENT       VARCHAR2(900) NOT NULL ,
	NOTICE_REG_DATE      DATE NULL ,
	NOTICE_CNT           NUMBER NULL ,
	ADMIN_ID             VARCHAR2(20) NOT NULL ,
	NOTICE_START         DATE NULL ,
	NOTICE_END           DATE NULL ,
	NOTICE_PRIORITY      NUMBER NULL 
);



ALTER TABLE TB_BOARD_NOTICE
	ADD  PRIMARY KEY (NOTICE_NO);



CREATE TABLE TB_BOARD_STUDYGROUP
(
	STUDYGROUP_NO        NUMBER NOT NULL ,
	STUDYGROUP_TITLE     VARCHAR2(90) NOT NULL ,
	STUDYGROUP_CONTENT   VARCHAR2(900) NOT NULL ,
	STUDYGROUP_REG_DATE  DATE NOT NULL ,
	STUDYGROUP_CNT       NUMBER NULL ,
	MEM_ID               VARCHAR2(12) NOT NULL ,
	STUDYGROUP_END       DATE NULL ,
	RECRUIT_STATUS       CHAR(1) NOT NULL 
);



ALTER TABLE TB_BOARD_STUDYGROUP
	ADD  PRIMARY KEY (STUDYGROUP_NO);



CREATE TABLE TB_CART
(
	ORDER_PRODUCT_NO     NUMBER NOT NULL ,
	ORDER_PRODUCT_QUANTITY NUMBER NOT NULL ,
	PRODUCT_CODE         VARCHAR2(20) NOT NULL 
);



ALTER TABLE TB_CART
	ADD  PRIMARY KEY (ORDER_PRODUCT_NO,PRODUCT_CODE);



CREATE TABLE TB_CONTRACT_AGREEMENT
(
	CONTRACT_REG_DATE    DATE NULL ,
	OWNER_ID             VARCHAR2(20) NOT NULL ,
	STORE_CODE           VARCHAR2(20) NOT NULL ,
	CONTRACT_STATUS      CHAR(1) NULL ,
	CONTRACT_START_DATE  DATE NULL ,
	CONTRACT_END_DATE    DATE NULL 
);



ALTER TABLE TB_CONTRACT_AGREEMENT
	ADD  PRIMARY KEY (STORE_CODE);



CREATE TABLE TB_EQUIP
(
	EQUIP_CODE           VARCHAR2(20) NOT NULL ,
	EQUIP_NAME           VARCHAR2(90) NOT NULL ,
	EQUIP_MANUFACTURE    VARCHAR2(30) NULL ,
	STORE_CODE           VARCHAR2(20) NOT NULL ,
	EQUIP_USEABLE        CHAR(1) NOT NULL ,
	EQUIP_RENT_PRICE     NUMBER NOT NULL 
);



ALTER TABLE TB_EQUIP
	ADD  PRIMARY KEY (EQUIP_CODE);



CREATE TABLE TB_FREE_FILE
(
	FREE_FILE_NO         NUMBER NOT NULL ,
	FREE_FILE_NAME       VARCHAR2(255) NULL ,
	FREE_FILE_ORIGIN     VARCHAR2(255) NULL ,
	FREE_FILE_COURS      VARCHAR2(3000) NULL ,
	FREE_FILE_EXTSN      VARCHAR2(20) NULL ,
	FREE_FILE_CREAT      DATE NULL ,
	FREE_NO              NUMBER NOT NULL 
);



ALTER TABLE TB_FREE_FILE
	ADD  PRIMARY KEY (FREE_FILE_NO);



CREATE TABLE TB_FREE_REPLY
(
	FREE_REPLY_CONTENT   VARCHAR2(900) NULL ,
	FREE_REPLY_NO        NUMBER NOT NULL ,
	FREE_NO              NUMBER NOT NULL ,
	FREE_REPLY_REG_DATE  DATE NULL 
);



ALTER TABLE TB_FREE_REPLY
	ADD  PRIMARY KEY (FREE_REPLY_NO);



CREATE TABLE TB_FREE_SCRAP
(
	FREE_NO              NUMBER NOT NULL ,
	MEM_ID               VARCHAR2(12) NOT NULL 
);



ALTER TABLE TB_FREE_SCRAP
	ADD  PRIMARY KEY (FREE_NO,MEM_ID);



CREATE TABLE TB_INFO_FILE
(
	INFO_FILE_NO         NUMBER NOT NULL ,
	INFO_FILE_NAME       VARCHAR2(255) NULL ,
	INFO_FILE_ORIGIN     VARCHAR2(255) NULL ,
	INFO_FILE_COURS      VARCHAR2(2000) NULL ,
	INFO_FILE_EXTSN      VARCHAR2(20) NULL ,
	INFO_FILE_CREAT      DATE NULL ,
	INFO_NO              NUMBER NOT NULL 
);



ALTER TABLE TB_INFO_FILE
	ADD  PRIMARY KEY (INFO_FILE_NO);



CREATE TABLE TB_INFO_REPLY
(
	INFO_REPLY_CONTENT   VARCHAR2(900) NULL ,
	INFO_REPLY_NO        NUMBER NOT NULL ,
	INFO_NO              NUMBER NOT NULL ,
	INFO_REPLY_REG_DATE  DATE NOT NULL 
);



ALTER TABLE TB_INFO_REPLY
	ADD  PRIMARY KEY (INFO_REPLY_NO);



CREATE TABLE TB_INFO_SCRAP
(
	INFO_NO              NUMBER NOT NULL ,
	MEM_ID               VARCHAR2(12) NOT NULL 
);



ALTER TABLE TB_INFO_SCRAP
	ADD  PRIMARY KEY (INFO_NO,MEM_ID);



CREATE TABLE TB_INSPECTION
(
	INSPECTION_REG_DATE  DATE NOT NULL ,
	INSPECTION_REG_TIME  DATE NOT NULL ,
	INSPECTION_STATUS    CHAR(1) NOT NULL ,
	STORE_CODE           VARCHAR2(20) NOT NULL ,
	INSPECTION_NO        CHAR(18) NOT NULL 
);



ALTER TABLE TB_INSPECTION
	ADD  PRIMARY KEY (INSPECTION_NO);



CREATE TABLE TB_LOG
(
	LOG_NO               NUMBER NOT NULL ,
	IP                   VARCHAR2(100) NULL ,
	LOG_DATE             DATE NULL ,
	MEM_ID               VARCHAR2(12) NOT NULL 
);



ALTER TABLE TB_LOG
	ADD  PRIMARY KEY (LOG_NO);



CREATE TABLE TB_LPROD
(
	LPROD_CODE           VARCHAR2(20) NOT NULL ,
	LPROD_NAME           VARCHAR2(30) NOT NULL ,
	LPROD_ID             VARCHAR2(30) NOT NULL 
);



ALTER TABLE TB_LPROD
	ADD  PRIMARY KEY (LPROD_CODE);



CREATE TABLE TB_MAIL_SEND_HIS
(
	MAIL_NO              NUMBER NOT NULL ,
	MAIL_TITLE           VARCHAR2(90) NULL ,
	ADMIN_ID             VARCHAR2(20) NOT NULL ,
	MAIL_CONTENT         VARCHAR2(900) NOT NULL 
);



ALTER TABLE TB_MAIL_SEND_HIS
	ADD  PRIMARY KEY (MAIL_NO);



CREATE TABLE TB_MEMBER
(
	MEM_ID               VARCHAR2(12) NOT NULL ,
	MEM_NAME             VARCHAR2(12) NOT NULL ,
	MEM_PASS             VARCHAR2(20) NOT NULL ,
	MEM_TEL              VARCHAR2(14) NOT NULL ,
	MEM_EMAIL            VARCHAR2(40) NOT NULL ,
	MEM_BIR              VARCHAR2(10) NOT NULL ,
	MEM_DELETED          CHAR(1) NOT NULL ,
	MEM_ROUTE            VARCHAR2(60) NULL ,
	MEM_GEN              CHAR(1) NOT NULL ,
	MEM_MEMO             VARCHAR2(900) NULL ,
	MEM_QR               BINARY_DOUBLE NULL 
);



ALTER TABLE TB_MEMBER
	ADD  PRIMARY KEY (MEM_ID);



CREATE TABLE TB_MENU
(
	MCODE                VARCHAR2(30) NOT NULL ,
	MNAME                VARCHAR2(40) NULL ,
	MURL                 VARCHAR2(150) NULL ,
	MICON                VARCHAR2(100) NULL ,
	UPCODE               VARCHAR2(40) NULL ,
	MLEVEL               NUMBER NULL ,
	ISNAV                NUMBER NULL ,
	MSCREEN              NUMBER NULL 
);



ALTER TABLE TB_MENU
	ADD  PRIMARY KEY (MCODE);



CREATE TABLE TB_NOTITALK
(
	NOTITALK_NO          NUMBER NOT NULL ,
	NOTITALK_REG_DATE    DATE NULL ,
	ADMIN_ID             VARCHAR2(20) NOT NULL ,
	NOTITALK_CONTENT     VARCHAR2(900) NULL 
);



ALTER TABLE TB_NOTITALK
	ADD  PRIMARY KEY (NOTITALK_NO);



CREATE TABLE TB_ORDER_PRODUCT
(
	ORDER_PRODUCT_REG_DATE DATE NOT NULL ,
	ORDER_PRODUCT_NO     NUMBER NOT NULL ,
	STORE_CODE           VARCHAR2(20) NOT NULL ,
	ORDER_PRODUCT_STATUS CHAR(1) NOT NULL ,
	ORDER_PRODUCT_TOTAL_PRICE NUMBER NOT NULL ,
	ORDER_PRODUCT_LOCATION VARCHAR2(20) NULL ,
	ORDER_PRODUCT_TOTAL_COUNT NUMBER NULL ,
	ORDER_DELIVERY_LOCATION VARCHAR2(20) NULL 
);



ALTER TABLE TB_ORDER_PRODUCT
	ADD  PRIMARY KEY (ORDER_PRODUCT_NO);



CREATE TABLE TB_OWNER
(
	OWNER_ID             VARCHAR2(20) NOT NULL ,
	OWNER_NAME           VARCHAR2(20) NOT NULL ,
	BUSINESS_NUMBER      VARCHAR2(40) NOT NULL ,
	OWNER_TEL            VARCHAR2(20) NOT NULL ,
	VAN                  VARCHAR2(100) NULL ,
	CAT_ID               NUMBER NULL ,
	AFFILIATE_REG_DATE   DATE NULL ,
	OWNER_PASS           VARCHAR2(20) NOT NULL ,
	OWNER_CONTRACT_STATUS CHAR(1) NULL ,
	OWNER_EMAIL          VARCHAR2(40) NOT NULL 
);



ALTER TABLE TB_OWNER
	ADD  PRIMARY KEY (OWNER_ID);



CREATE TABLE TB_PRODUCT
(
	PRODUCT_CODE         VARCHAR2(20) NOT NULL ,
	PRODUCT_NAME         VARCHAR2(30) NOT NULL ,
	PRODUCT_PRICE        NUMBER NOT NULL ,
	PRODUCT_QUANTITY     NUMBER NOT NULL ,
	LPROD_CODE           VARCHAR2(20) NOT NULL ,
	PRODUCT_USEABLE      CHAR(1) NOT NULL 
);



ALTER TABLE TB_PRODUCT
	ADD  PRIMARY KEY (PRODUCT_CODE);



CREATE TABLE TB_PRODUCT_EQUIP
(
	PRODUCT_EQUIP_RENT_PRICE NUMBER NOT NULL ,
	PRODUCT_EQUIP_MANUFACTURE VARCHAR2(30) NULL ,
	PRODUCT_CODE         VARCHAR2(20) NOT NULL 
);



ALTER TABLE TB_PRODUCT_EQUIP
	ADD  PRIMARY KEY (PRODUCT_CODE);



CREATE TABLE TB_RENT_EQUIP
(
	RENT_EQUIP_NO        NUMBER NOT NULL ,
	EQUIP_RENT_IN        DATE NOT NULL ,
	MEM_ID               VARCHAR2(12) NOT NULL ,
	EQUIP_CODE           VARCHAR2(20) NOT NULL ,
	EQUIP_RENT_OUT       DATE NOT NULL ,
	EQUIP_TOTAL_PRICE    NUMBER NULL 
);



ALTER TABLE TB_RENT_EQUIP
	ADD  PRIMARY KEY (RENT_EQUIP_NO);



CREATE TABLE TB_RENT_SEAT
(
	SEAT_NO              NUMBER NOT NULL ,
	SEAT_IN              DATE NOT NULL ,
	SEAT_OUT             DATE NOT NULL ,
	RENT_SEAT_NO         NUMBER NOT NULL ,
	SEAT_TOTALTIME       NUMBER NOT NULL ,
	STORE_CODE           VARCHAR2(20) NOT NULL ,
	MEM_ID               VARCHAR2(12) NOT NULL 
);



ALTER TABLE TB_RENT_SEAT
	ADD  PRIMARY KEY (RENT_SEAT_NO);



CREATE TABLE TB_RENT_STUDYROOM
(
	STUDYROOM_RESERV_NO  NUMBER NOT NULL ,
	STUDYROOM_RESERV_DATE DATE NOT NULL ,
	STUDYROOM_NO         NUMBER NOT NULL ,
	MEM_ID               VARCHAR2(12) NOT NULL ,
	STUDYROOM_RESERV_START DATE NOT NULL ,
	STUDYROOM_IN         DATE NULL ,
	STUDYROOM_OUT        DATE NULL ,
	STUDYROOM_TOTAL_PRICE NUMBER NULL ,
	STUDYROOM_RESERV_END DATE NOT NULL ,
	STUDYROOM_TID        NUMBER NULL 
);



ALTER TABLE TB_RENT_STUDYROOM
	ADD  PRIMARY KEY (STUDYROOM_RESERV_NO);



CREATE TABLE TB_SEAT
(
	SEAT_NO              NUMBER NOT NULL ,
	STORE_CODE           VARCHAR2(20) NOT NULL ,
	SEAT_USEABLE         CHAR(1) NOT NULL 
);



ALTER TABLE TB_SEAT
	ADD  PRIMARY KEY (SEAT_NO,STORE_CODE);



CREATE TABLE TB_SEAT_REVIEWS
(
	SEAT_REVIEWS_NO      NUMBER NOT NULL ,
	SEAT_REVIEWS_CONTENT VARCHAR2(900) NOT NULL ,
	SEAT_GRADE           NUMBER NOT NULL ,
	MEM_ID               VARCHAR2(12) NOT NULL ,
	RENT_SEAT_NO         NUMBER NOT NULL ,
	SEAT_REVIEWS_REG_DATE DATE NOT NULL 
);



ALTER TABLE TB_SEAT_REVIEWS
	ADD  PRIMARY KEY (SEAT_REVIEWS_NO);



CREATE TABLE TB_STORE
(
	STORE_CODE           VARCHAR2(20) NOT NULL ,
	STORE_NAME           VARCHAR2(90) NOT NULL ,
	STORE_SIZE           VARCHAR2(20) NULL ,
	USING_GUIDE          VARCHAR2(3000) NULL ,
	STORE_STATUS         CHAR(1) NOT NULL ,
	ADDR_DONM_CODE       VARCHAR2(20) NOT NULL ,
	ADDR_SIGUGUN_CODE    VARCHAR2(20) NOT NULL ,
	STORE_TOTAL_SEAT     NUMBER NOT NULL ,
	STORE_CONTRACT_STATUS CHAR(1) NOT NULL ,
	STORE_ADDR           VARCHAR2(300) NOT NULL ,
	STORE_MAP_X          NUMBER NULL ,
	STORE_MAP_Y          NUMBER NULL ,
	STORE_SEAT_MAP       VARCHAR2(900) NULL ,
	STORE_PHONE          VARCHAR2(14) NULL 
);



ALTER TABLE TB_STORE
	ADD  PRIMARY KEY (STORE_CODE);



CREATE TABLE TB_STORE_ADDR
(
	ADDR_DONM_NAME       VARCHAR2(20) NOT NULL ,
	ADDR_DONM_CODE       VARCHAR2(20) NOT NULL ,
	ADDR_SIGUGUN_CODE    VARCHAR2(20) NOT NULL ,
	ADDR_SIGUGUN_NAME    VARCHAR2(20) NOT NULL 
);



ALTER TABLE TB_STORE_ADDR
	ADD  PRIMARY KEY (ADDR_DONM_CODE,ADDR_SIGUGUN_CODE);



CREATE TABLE TB_STORE_BOOKMARK
(
	MEM_ID               VARCHAR2(12) NOT NULL ,
	STORE_CODE           VARCHAR2(20) NOT NULL 
);



ALTER TABLE TB_STORE_BOOKMARK
	ADD  PRIMARY KEY (MEM_ID,STORE_CODE);



CREATE TABLE TB_STORE_IMAGE
(
	STORE_IMAGE_NO       NUMBER NOT NULL ,
	STORE_IMAGE_NAME     VARCHAR2(255) NULL ,
	STORE_IMAGE_ORIGIN   VARCHAR2(255) NULL ,
	STORE_IMAGE_COURS    VARCHAR2(3000) NULL ,
	STORE_IMAGE_EXTSN    VARCHAR2(20) NULL ,
	STORE_IMAGE_CREAT    DATE NULL ,
	STORE_CODE           VARCHAR2(20) NULL 
);



ALTER TABLE TB_STORE_IMAGE
	ADD  PRIMARY KEY (STORE_IMAGE_NO);



CREATE TABLE TB_STORE_STOCK
(
	STORE_STOCK_QUANTITY NUMBER NOT NULL ,
	STORE_CODE           VARCHAR2(20) NOT NULL ,
	STORE_SUPPLY_DATE    DATE NULL ,
	PRODUCT_CODE         VARCHAR2(20) NOT NULL 
);



ALTER TABLE TB_STORE_STOCK
	ADD  PRIMARY KEY (PRODUCT_CODE,STORE_CODE);



CREATE TABLE TB_STUDYGROUP_FILE
(
	STUDYGROUP_FILE_NO   NUMBER NOT NULL ,
	STUDYGROUP_FILE_NAME VARCHAR2(255) NULL ,
	STUDYGROUP_FILE_ORIGIN VARCHAR2(255) NULL ,
	STUDYGROUP_FILE_COURS VARCHAR2(3000) NULL ,
	STUDYGROUP_FILE_EXTSN VARCHAR2(20) NULL ,
	STUDYGROUP_FILE_CREAT DATE NULL ,
	STUDYGROUP_NO        NUMBER NOT NULL 
);



ALTER TABLE TB_STUDYGROUP_FILE
	ADD  PRIMARY KEY (STUDYGROUP_FILE_NO);



CREATE TABLE TB_STUDYGROUP_REPLY
(
	STUDYGROUP_REPLY_CONTENT VARCHAR2(900) NULL ,
	STUDYGROUP_REPLY_NO  NUMBER NOT NULL ,
	STUDYGROUP_NO        NUMBER NOT NULL ,
	STUDYGROUP_REPLY_REG_DATE DATE NULL 
);



ALTER TABLE TB_STUDYGROUP_REPLY
	ADD  PRIMARY KEY (STUDYGROUP_REPLY_NO);



CREATE TABLE TB_STUDYGROUP_SCRAP
(
	STUDYGROUP_NO        NUMBER NOT NULL ,
	MEM_ID               VARCHAR2(12) NOT NULL 
);



ALTER TABLE TB_STUDYGROUP_SCRAP
	ADD  PRIMARY KEY (MEM_ID,STUDYGROUP_NO);



CREATE TABLE TB_STUDYROOM
(
	STUDYROOM_NO         NUMBER NOT NULL ,
	STORE_CODE           VARCHAR2(20) NOT NULL ,
	STUDYROOM_CAPA       NUMBER(2) NULL ,
	STUDYROOM_OPTION     VARCHAR2(20) NULL ,
	STUDYROOM_IMAGE      VARCHAR2(3000) NULL ,
	STUDYROOM_USE_PRICE  NUMBER NULL ,
	STUDYROOM_STATUS     CHAR(1) NULL 
);



ALTER TABLE TB_STUDYROOM
	ADD  PRIMARY KEY (STUDYROOM_NO);



CREATE TABLE TB_STUDYROOM_REVIEWS
(
	REVIEWS_CONTENT      VARCHAR2(900) NOT NULL ,
	REVIEWS_NO           NUMBER NOT NULL ,
	MEM_ID               VARCHAR2(12) NOT NULL ,
	STUDYROOM_GRADE      NUMBER NOT NULL ,
	STUDYROOM_RESERV_NO  NUMBER NOT NULL ,
	STUDYROOM_REVIEWS_REG_DATE DATE NOT NULL 
);



ALTER TABLE TB_STUDYROOM_REVIEWS
	ADD  PRIMARY KEY (REVIEWS_NO);



CREATE TABLE TB_TICKET
(
	TICKET_NO            NUMBER NOT NULL ,
	TICKET_PRICE         NUMBER NOT NULL ,
	TICKET_NAME          VARCHAR2(90) NOT NULL ,
	TICKET_CODE          VARCHAR2(30) NOT NULL ,
	TICKET_STATUS        CHAR(1) NOT NULL ,
	TICKET_KIND          VARCHAR2(90) NOT NULL ,
	TICKET_TIME          DATE NOT NULL ,
	TICKET_TERM          DATE NOT NULL 
);



ALTER TABLE TB_TICKET
	ADD  PRIMARY KEY (TICKET_NO);



CREATE TABLE TB_TICKET_BUY
(
	TICKET_BUY_DATE      DATE NOT NULL ,
	TICKET_BUY_NO        NUMBER NOT NULL ,
	TICKET_NO            NUMBER NOT NULL ,
	MEM_ID               VARCHAR2(12) NOT NULL ,
	TICKET_TIME_REMAIN   DATE NOT NULL ,
	TICKET_EXPIRE_DATE   DATE NOT NULL 
);



ALTER TABLE TB_TICKET_BUY
	ADD  PRIMARY KEY (TICKET_BUY_NO);



CREATE TABLE TB_VOC
(
	VOC_TITLE            VARCHAR2(90) NOT NULL ,
	VOC_CONTENT          VARCHAR2(900) NOT NULL ,
	VOC_NO               NUMBER NOT NULL ,
	VOC_REG_DATE         DATE NOT NULL ,
	MEM_ID               VARCHAR2(12) NOT NULL ,
	STORE_CODE           VARCHAR2(20) NOT NULL ,
	VOC_KIND             VARCHAR2(90) NULL ,
	VISIT_DATE           DATE NULL ,
	USE_SERVICE          VARCHAR2(90) NULL ,
	VOC_STATUS           CHAR(1) NOT NULL 
);



ALTER TABLE TB_VOC
	ADD  PRIMARY KEY (VOC_NO);



CREATE TABLE TB_VOC_MANAGEMENT
(
	VOC_NO               NUMBER NOT NULL ,
	VOC_REPLY_CONTENT    VARCHAR2(900) NOT NULL ,
	VOC_REPLY_NO         NUMBER NOT NULL ,
	VOC_CONFIRM_DATE     DATE NULL ,
	ADMIN_ID             VARCHAR2(20) NOT NULL 
);



ALTER TABLE TB_VOC_MANAGEMENT
	ADD  PRIMARY KEY (VOC_REPLY_NO);



ALTER TABLE TB_BOARD_FREE
	ADD (FOREIGN KEY (MEM_ID) REFERENCES TB_MEMBER (MEM_ID));



ALTER TABLE TB_BOARD_INFO
	ADD (FOREIGN KEY (MEM_ID) REFERENCES TB_MEMBER (MEM_ID));



ALTER TABLE TB_BOARD_NOTICE
	ADD (FOREIGN KEY (ADMIN_ID) REFERENCES TB_ADMIN (ADMIN_ID));



ALTER TABLE TB_BOARD_STUDYGROUP
	ADD (FOREIGN KEY (MEM_ID) REFERENCES TB_MEMBER (MEM_ID) ON DELETE SET NULL);



ALTER TABLE TB_CART
	ADD (FOREIGN KEY (ORDER_PRODUCT_NO) REFERENCES TB_ORDER_PRODUCT (ORDER_PRODUCT_NO));



ALTER TABLE TB_CART
	ADD (FOREIGN KEY (PRODUCT_CODE) REFERENCES TB_PRODUCT (PRODUCT_CODE));



ALTER TABLE TB_CONTRACT_AGREEMENT
	ADD (FOREIGN KEY (OWNER_ID) REFERENCES TB_OWNER (OWNER_ID));



ALTER TABLE TB_CONTRACT_AGREEMENT
	ADD (FOREIGN KEY (STORE_CODE) REFERENCES TB_STORE (STORE_CODE));



ALTER TABLE TB_EQUIP
	ADD (FOREIGN KEY (STORE_CODE) REFERENCES TB_STORE (STORE_CODE));



ALTER TABLE TB_FREE_FILE
	ADD (FOREIGN KEY (FREE_NO) REFERENCES TB_BOARD_FREE (FREE_NO));



ALTER TABLE TB_FREE_REPLY
	ADD (FOREIGN KEY (FREE_NO) REFERENCES TB_BOARD_FREE (FREE_NO));



ALTER TABLE TB_FREE_SCRAP
	ADD (FOREIGN KEY (FREE_NO) REFERENCES TB_BOARD_FREE (FREE_NO));



ALTER TABLE TB_FREE_SCRAP
	ADD (FOREIGN KEY (MEM_ID) REFERENCES TB_MEMBER (MEM_ID));



ALTER TABLE TB_INFO_FILE
	ADD (FOREIGN KEY (INFO_NO) REFERENCES TB_BOARD_INFO (INFO_NO));



ALTER TABLE TB_INFO_REPLY
	ADD (FOREIGN KEY (INFO_NO) REFERENCES TB_BOARD_INFO (INFO_NO));



ALTER TABLE TB_INFO_SCRAP
	ADD (FOREIGN KEY (INFO_NO) REFERENCES TB_BOARD_INFO (INFO_NO));



ALTER TABLE TB_INFO_SCRAP
	ADD (FOREIGN KEY (MEM_ID) REFERENCES TB_MEMBER (MEM_ID));



ALTER TABLE TB_INSPECTION
	ADD (FOREIGN KEY (STORE_CODE) REFERENCES TB_STORE (STORE_CODE));



ALTER TABLE TB_LOG
	ADD (FOREIGN KEY (MEM_ID) REFERENCES TB_MEMBER (MEM_ID));



ALTER TABLE TB_MAIL_SEND_HIS
	ADD (FOREIGN KEY (ADMIN_ID) REFERENCES TB_ADMIN (ADMIN_ID));



ALTER TABLE TB_NOTITALK
	ADD (FOREIGN KEY (ADMIN_ID) REFERENCES TB_ADMIN (ADMIN_ID));



ALTER TABLE TB_ORDER_PRODUCT
	ADD (FOREIGN KEY (STORE_CODE) REFERENCES TB_STORE (STORE_CODE));



ALTER TABLE TB_PRODUCT
	ADD (FOREIGN KEY (LPROD_CODE) REFERENCES TB_LPROD (LPROD_CODE));



ALTER TABLE TB_PRODUCT_EQUIP
	ADD (FOREIGN KEY (PRODUCT_CODE) REFERENCES TB_PRODUCT (PRODUCT_CODE));



ALTER TABLE TB_RENT_EQUIP
	ADD (FOREIGN KEY (MEM_ID) REFERENCES TB_MEMBER (MEM_ID));



ALTER TABLE TB_RENT_EQUIP
	ADD (FOREIGN KEY (EQUIP_CODE) REFERENCES TB_EQUIP (EQUIP_CODE));



ALTER TABLE TB_RENT_SEAT
	ADD (FOREIGN KEY (SEAT_NO, STORE_CODE) REFERENCES TB_SEAT (SEAT_NO, STORE_CODE));



ALTER TABLE TB_RENT_SEAT
	ADD (FOREIGN KEY (MEM_ID) REFERENCES TB_MEMBER (MEM_ID));



ALTER TABLE TB_RENT_STUDYROOM
	ADD (FOREIGN KEY (STUDYROOM_NO) REFERENCES TB_STUDYROOM (STUDYROOM_NO));



ALTER TABLE TB_RENT_STUDYROOM
	ADD (FOREIGN KEY (MEM_ID) REFERENCES TB_MEMBER (MEM_ID));



ALTER TABLE TB_SEAT
	ADD (FOREIGN KEY (STORE_CODE) REFERENCES TB_STORE (STORE_CODE));



ALTER TABLE TB_SEAT_REVIEWS
	ADD (FOREIGN KEY (MEM_ID) REFERENCES TB_MEMBER (MEM_ID));



ALTER TABLE TB_SEAT_REVIEWS
	ADD (FOREIGN KEY (RENT_SEAT_NO) REFERENCES TB_RENT_SEAT (RENT_SEAT_NO));



ALTER TABLE TB_STORE
	ADD (FOREIGN KEY (ADDR_DONM_CODE, ADDR_SIGUGUN_CODE) REFERENCES TB_STORE_ADDR (ADDR_DONM_CODE, ADDR_SIGUGUN_CODE));



ALTER TABLE TB_STORE_BOOKMARK
	ADD (FOREIGN KEY (MEM_ID) REFERENCES TB_MEMBER (MEM_ID));



ALTER TABLE TB_STORE_BOOKMARK
	ADD (FOREIGN KEY (STORE_CODE) REFERENCES TB_STORE (STORE_CODE));



ALTER TABLE TB_STORE_IMAGE
	ADD (FOREIGN KEY (STORE_CODE) REFERENCES TB_STORE (STORE_CODE) ON DELETE SET NULL);



ALTER TABLE TB_STORE_STOCK
	ADD (FOREIGN KEY (STORE_CODE) REFERENCES TB_STORE (STORE_CODE));



ALTER TABLE TB_STORE_STOCK
	ADD (FOREIGN KEY (PRODUCT_CODE) REFERENCES TB_PRODUCT (PRODUCT_CODE));



ALTER TABLE TB_STUDYGROUP_FILE
	ADD (FOREIGN KEY (STUDYGROUP_NO) REFERENCES TB_BOARD_STUDYGROUP (STUDYGROUP_NO));



ALTER TABLE TB_STUDYGROUP_REPLY
	ADD (FOREIGN KEY (STUDYGROUP_NO) REFERENCES TB_BOARD_STUDYGROUP (STUDYGROUP_NO));



ALTER TABLE TB_STUDYGROUP_SCRAP
	ADD (FOREIGN KEY (STUDYGROUP_NO) REFERENCES TB_BOARD_STUDYGROUP (STUDYGROUP_NO));



ALTER TABLE TB_STUDYGROUP_SCRAP
	ADD (FOREIGN KEY (MEM_ID) REFERENCES TB_MEMBER (MEM_ID));



ALTER TABLE TB_STUDYROOM
	ADD (FOREIGN KEY (STORE_CODE) REFERENCES TB_STORE (STORE_CODE));



ALTER TABLE TB_STUDYROOM_REVIEWS
	ADD (FOREIGN KEY (MEM_ID) REFERENCES TB_MEMBER (MEM_ID));



ALTER TABLE TB_STUDYROOM_REVIEWS
	ADD (FOREIGN KEY (STUDYROOM_RESERV_NO) REFERENCES TB_RENT_STUDYROOM (STUDYROOM_RESERV_NO));



ALTER TABLE TB_TICKET_BUY
	ADD (FOREIGN KEY (TICKET_NO) REFERENCES TB_TICKET (TICKET_NO));



ALTER TABLE TB_TICKET_BUY
	ADD (FOREIGN KEY (MEM_ID) REFERENCES TB_MEMBER (MEM_ID));



ALTER TABLE TB_VOC
	ADD (FOREIGN KEY (MEM_ID) REFERENCES TB_MEMBER (MEM_ID));



ALTER TABLE TB_VOC
	ADD (FOREIGN KEY (STORE_CODE) REFERENCES TB_STORE (STORE_CODE) ON DELETE SET NULL);



ALTER TABLE TB_VOC_MANAGEMENT
	ADD (FOREIGN KEY (VOC_NO) REFERENCES TB_VOC (VOC_NO));



ALTER TABLE TB_VOC_MANAGEMENT
	ADD (FOREIGN KEY (ADMIN_ID) REFERENCES TB_ADMIN (ADMIN_ID));


